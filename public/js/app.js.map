{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// Get all the random stuff in the vue-all file\n'use strict';\n\nrequire('./vue-all.js');\n\n// Get all the table components\nrequire('./tables/table-headers.js');\n\n// Get all the form components\nrequire('./forms/bootstrap.js');\nrequire('./forms/transaction-form.js');\n\n// Get all the table instances\nrequire('./tables/devices-table.js');\nrequire('./tables/most-expensive-property-table.js');\nrequire('./tables/portfolio-table.js');\nrequire('./tables/property-manager-table.js');\nrequire('./tables/transactions-table.js');\n\n// Get modal stuff\nrequire('./components/modal.js');\n\n},{\"./components/modal.js\":2,\"./forms/bootstrap.js\":3,\"./forms/transaction-form.js\":8,\"./tables/devices-table.js\":9,\"./tables/most-expensive-property-table.js\":10,\"./tables/portfolio-table.js\":11,\"./tables/property-manager-table.js\":12,\"./tables/table-headers.js\":13,\"./tables/transactions-table.js\":14,\"./vue-all.js\":15}],2:[function(require,module,exports){\n'use strict';\n\nVue.component('modal', {\n\tprops: ['title'],\n\n\ttemplate: '<div v-if=\"visible\" class=\"vue-modal row\">\\\n\t<div id=\"modal\" class=\"modal-dialog\">\\\n\t\t<div class=\"modal-content col-sm-12 p-b\">\\\n\t\t\t<div class=\"modal-header row\">\\\n\t        \t<button @click=\"hide\" class=\"col-sm-1 icon icon-cross btn btn-clear\" :class=\"{\\'col-sm-offset-11\\' : !title}\"></button>\\\n\t        \t<h4 v-if=\"title\" class=\"modal-title\">{{ title}}</h4>\\\n\t      \t</div>\\\n\t\t  \t<div class=\"modal-body\">\\\n\t\t  \t\t<slot name=\"one\"></slot>\\\n\t\t  \t</div>\\\n\t\t</div><!-- /.modal-content -->\\\n\t</div><!-- /.modal-dialog -->\\\n</div>',\n\n\tdata: function data() {\n\t\treturn {\n\t\t\tvisible: false\n\t\t};\n\t},\n\n\tevents: {\n\t\t'show-modal': function showModal() {\n\t\t\tthis.show();\n\t\t},\n\n\t\t'hide-modal': function hideModal() {\n\t\t\tthis.hide();\n\t\t}\n\t},\n\n\tmethods: {\n\t\tshow: function show() {\n\t\t\tthis.visible = true;\n\t\t},\n\n\t\thide: function hide() {\n\t\t\t//reset the content to empty\n\n\t\t\t// hide modal\n\t\t\tthis.visible = false;\n\t\t\tthis.$dispatch('modal-hidden');\n\t\t}\n\t}\n\n});\n\n},{}],3:[function(require,module,exports){\n/**\n * Initialize the Spark form extension points.\n */\n'use strict';\n\nTS.forms = {\n  transaction: {},\n  updateProfileBasics: {},\n  updateTeamOwnerBasics: {}\n};\n\n/**\n * Load the SparkForm helper class.\n */\nrequire('./instance');\n\n/**\n * Define the form error collection class.\n */\nrequire('./errors');\n\n/**\n * Add additional form helpers to the Spark object.\n */\n$.extend(TS, require('./http'));\n\n/**\n * Define the Spark form input components.\n */\nrequire('./components');\n\n},{\"./components\":4,\"./errors\":5,\"./http\":6,\"./instance\":7}],4:[function(require,module,exports){\n/**\n * Text field input component for Bootstrap.\n */\n'use strict';\n\nVue.component('ts-text', {\n    props: ['display', 'form', 'name', 'input', 'show'],\n\n    template: '<div v-show=\"typeof show !== \\'undefined\\' ? show : true\" class=\"form-group\" :class=\"{\\'has-error\\': form.errors.has(name)}\">\\\n    <label class=\"col-md-3 control-label\">{{ display }}</label>\\\n    <div class=\"col-md-9\">\\\n        <input type=\"text\" class=\"form-control\" v-model=\"input\">\\\n        <span class=\"help-block\" v-show=\"form.errors.has(name)\">\\\n            <strong>{{ form.errors.get(name) }}</strong>\\\n        </span>\\\n    </div>\\\n</div>'\n});\n\n/**\n * Date field input component for Bootstrap.\n */\nVue.component('ts-date', {\n    props: ['display', 'form', 'name', 'input', 'show'],\n\n    template: '<div v-show=\"typeof show !== \\'undefined\\' ? show : true\" class=\"form-group\" :class=\"{\\'has-error\\': form.errors.has(name)}\">\\\n    <label class=\"col-md-3 control-label\">{{ display }}</label>\\\n    <div class=\"col-md-9\">\\\n        <input type=\"date\" class=\"form-control\" v-model=\"input\">\\\n        <span class=\"help-block\" v-show=\"form.errors.has(name)\">\\\n            <strong>{{ form.errors.get(name) }}</strong>\\\n        </span>\\\n    </div>\\\n</div>'\n});\n\n/**\n * E-mail field input component for Bootstrap.\n */\nVue.component('ts-email', {\n    props: ['display', 'form', 'name', 'input', 'show'],\n\n    template: '<div v-show=\"typeof show !== \\'undefined\\' ? show : true\" class=\"form-group\" :class=\"{\\'has-error\\': form.errors.has(name)}\">\\\n    <label class=\"col-md-3 control-label\">{{ display }}</label>\\\n    <div class=\"col-md-9\">\\\n        <input type=\"email\" class=\"form-control\" v-model=\"input\">\\\n        <span class=\"help-block\" v-show=\"form.errors.has(name)\">\\\n            <strong>{{ form.errors.get(name) }}</strong>\\\n        </span>\\\n    </div>\\\n</div>'\n});\n\n/**\n * Password field input component for Bootstrap.\n */\nVue.component('ts-password', {\n    props: ['display', 'form', 'name', 'input', 'show'],\n\n    template: '<div v-show=\"typeof show !== \\'undefined\\' ? show : true\" class=\"form-group\" :class=\"{\\'has-error\\': form.errors.has(name)}\">\\\n    <label class=\"col-md-3 control-label\">{{ display }}</label>\\\n    <div class=\"col-md-9\">\\\n        <input type=\"password\" class=\"form-control\" v-model=\"input\">\\\n        <span class=\"help-block\" v-show=\"form.errors.has(name)\">\\\n            <strong>{{ form.errors.get(name) }}</strong>\\\n        </span>\\\n    </div>\\\n</div>'\n});\n\n/**\n * Checkbox field input component for Bootstrap.\n */\nVue.component('ts-checkbox', {\n    props: ['display', 'form', 'name', 'input', 'show'],\n\n    template: '<div v-show=\"typeof show !== \\'undefined\\' ? show : true\" class=\"form-group\" :class=\"{\\'has-error\\': form.errors.has(name)}\">\\\n    <label class=\"col-md-3 control-label\">{{ display }}</label>\\\n    <div class=\"col-md-9\">\\\n        <input type=\"checkbox\" class=\"form-control\" v-model=\"input\">\\\n        <span class=\"help-block\" v-show=\"form.errors.has(name)\">\\\n            <strong>{{ form.errors.get(name) }}</strong>\\\n        </span>\\\n    </div>\\\n</div>'\n});\n\n/**\n * Select input component for Bootstrap.\n */\nVue.component('ts-select', {\n    props: ['display', 'form', 'name', 'items', 'input', 'show'],\n\n    template: '<div v-show=\"typeof show !== \\'undefined\\' ? show : true\" class=\"form-group\" :class=\"{\\'has-error\\': form.errors.has(name)}\">\\\n    <label class=\"col-md-3 control-label\">{{ display }}</label>\\\n    <div class=\"col-md-8\">\\\n        <select class=\"form-control\" v-model=\"input\">\\\n            <option v-for=\"item in items\" :value=\"item.value\">\\\n                {{ item.text }}\\\n            </option>\\\n        </select>\\\n        <span class=\"help-block\" v-show=\"form.errors.has(name)\">\\\n            <strong>{{ form.errors.get(name) }}</strong>\\\n        </span>\\\n    </div>\\\n</div>'\n});\n\n},{}],5:[function(require,module,exports){\n/**\n * Spark form error collection class.\n */\n'use strict';\n\nwindow.TSFormErrors = function () {\n    this.errors = {};\n\n    /**\n     * Determine if the collection has any errors.\n     */\n    this.hasErrors = function () {\n        return !_.isEmpty(this.errors);\n    };\n\n    /**\n     * Determine if the collection has errors for a given field.\n     */\n    this.has = function (field) {\n        return _.indexOf(_.keys(this.errors), field) > -1;\n    };\n\n    /**\n     * Get all of the raw errors for the collection.\n     */\n    this.all = function () {\n        return this.errors;\n    };\n\n    /**\n     * Get all of the errors for the collection in a flat array.\n     */\n    this.flatten = function () {\n        return _.flatten(_.toArray(this.errors));\n    };\n\n    /**\n     * Get the first error message for a given field.\n     */\n    this.get = function (field) {\n        if (this.has(field)) {\n            return this.errors[field][0];\n        }\n    };\n\n    /**\n     * Set the raw errors for the collection.\n     */\n    this.set = function (errors) {\n        if (typeof errors === 'object') {\n            this.errors = errors;\n        } else {\n            this.errors = { 'field': ['Something went wrong. Please try again.'] };\n        }\n    };\n\n    /**\n     * Forget all of the errors currently in the collection.\n     */\n    this.forget = function () {\n        this.errors = {};\n    };\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n    /**\n     * A few helper methods for making HTTP requests and doing common form actions.\n     */\n    post: function post(uri, form) {\n        return TS.sendForm('post', uri, form);\n    },\n\n    put: function put(uri, form) {\n        return TS.sendForm('put', uri, form);\n    },\n\n    patch: function patch(uri, form) {\n        return TS.sendForm('patch', uri, form);\n    },\n\n    'delete': function _delete(uri, form) {\n        return TS.sendForm('delete', uri, form);\n    },\n\n    /**\n     * Send the form to the back-end server. Perform common form tasks.\n     *\n     * This function will automatically clear old errors, update \"busy\" status, etc.\n     */\n    sendForm: function sendForm(method, uri, form) {\n        return new Promise(function (resolve, reject) {\n            form.startProcessing();\n\n            Vue.http[method](uri, form).success(function (response) {\n                form.finishProcessing();\n\n                resolve(response);\n            }).error(function (errors) {\n                form.errors.set(errors);\n                form.busy = false;\n\n                reject(errors);\n            });\n        });\n    }\n};\n\n},{}],7:[function(require,module,exports){\n/**\n * SparkForm helper class. Used to set common properties on all forms.\n */\n\"use strict\";\n\nwindow.TSForm = function (data) {\n    var form = this;\n\n    $.extend(this, data);\n\n    this.errors = new TSFormErrors();\n    this.busy = false;\n    this.successful = false;\n\n    this.startProcessing = function () {\n        form.errors.forget();\n        form.busy = true;\n        form.successful = false;\n    };\n\n    this.finishProcessing = function () {\n        form.busy = false;\n        form.successful = true;\n    };\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nVue.component('transaction-form', {\n\n\tcomponents: require('./components.js'),\n\n\tdata: function data() {\n\t\treturn {\n\t\t\tamount: '',\n\t\t\tdescription: '',\n\t\t\ttransaction: null,\n\t\t\tdate: '',\n\t\t\tpayable: {\n\t\t\t\tid: TenantSync.landlord,\n\t\t\t\ttype: 'user',\n\t\t\t\tsearch: null,\n\t\t\t\tselected: 'General'\n\t\t\t},\n\t\t\trecurring: false,\n\t\t\tschedule: null\n\t\t};\n\t},\n\n\tready: function ready() {},\n\n\tevents: {},\n\n\tmethods: {\n\t\tsubmitTransaction: function submitTransaction() {\n\t\t\tvar payload = {\n\t\t\t\tamount: this.amount,\n\t\t\t\tdescription: this.description,\n\t\t\t\tpayable_id: this.payable.id,\n\t\t\t\tpayable_type: this.payable.type,\n\t\t\t\tis_rent: this.is_rent,\n\t\t\t\tdate: this.date,\n\t\t\t\trecurring: this.recurring,\n\t\t\t\tschedule: this.schedule\n\t\t\t};\n\n\t\t\tif (this.transaction) {\n\t\t\t\tthis.updateTransaction(payload);\n\t\t\t} else {\n\t\t\t\tpayload.user_id = TenantSync.landlord;\n\t\t\t\tthis.createTransaction(payload);\n\t\t\t}\n\t\t},\n\n\t\tsetPayable: function setPayable(type, id, string) {\n\t\t\tthis.is_rent = false;\n\t\t\tthis.payable.type = type;\n\t\t\tif (type == 'user') {\n\t\t\t\tthis.payable.selected = 'General';\n\t\t\t\tthis.payable.id = TenantSync.landlord;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis.payable.selected = string;\n\t\t\tthis.payable.id = id;\n\t\t\treturn true;\n\t\t},\n\n\t\tcreateTransaction: function createTransaction(payload) {\n\t\t\tthis.$http.post('/' + TenantSync.user.role + '/transaction', payload).success(function (transaction) {\n\t\t\t\tthis.hideModal();\n\t\t\t\tthis.fetchTransactions(1, this.sortKey, this.reverse);\n\t\t\t});\n\t\t},\n\n\t\tupdateTransaction: function updateTransaction(payload) {\n\t\t\tthis.$http.patch('/' + TenantSync.user.role + '/transaction/' + this.transaction.id, payload).success(function (transaction) {\n\t\t\t\tthis.hideModal();\n\t\t\t\tthis.fetchTransactions(1, this.sortKey, this.reverse);\n\t\t\t});\n\t\t},\n\n\t\tdeleteTransaction: function deleteTransaction(id) {\n\t\t\tthis.$http['delete']('/' + TenantSync.user.role + '/transaction/' + id).success(function () {\n\t\t\t\tthis.fetchTransactions(1, this.sortKey, this.reverse);\n\t\t\t});\n\t\t},\n\n\t\tgetTransactionPayable: function getTransactionPayable(transaction) {\n\n\t\t\tswitch (transaction.payable_type) {\n\t\t\t\tcase 'TenantSync\\\\Models\\\\Property':\n\t\t\t\t\treturn 'property';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TenantSync\\\\Models\\\\Device':\n\t\t\t\t\treturn 'device';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TenantSync\\\\Models\\\\User':\n\t\t\t\t\treturn 'user';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n});\n\n},{\"./components.js\":4}],9:[function(require,module,exports){\n'use strict';\n\nVue.component('devices-table', {\n\n\tprops: ['userRole'],\n\n\t// components: {\n\t// \t'table-headers': require('./table-headers'),\n\t// },\n\n\tdata: function data() {\n\t\treturn {\n\t\t\tsortKey: 'rent_amount',\n\n\t\t\treverse: -1,\n\n\t\t\tcurrentPage: 1,\n\n\t\t\tsearch: null,\n\n\t\t\tcolumns: [{\n\t\t\t\tname: 'address',\n\t\t\t\tlabel: 'address',\n\t\t\t\twidth: 'col-sm-6',\n\t\t\t\tisSortable: false\n\t\t\t}, {\n\t\t\t\tname: 'rent_owed',\n\t\t\t\tlabel: 'Rent Owed',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: 'status',\n\t\t\t\tlabel: 'status',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: 'alarm_id',\n\t\t\t\tlabel: 'alarm',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}],\n\n\t\t\tdevices: []\n\t\t};\n\t},\n\n\tevents: {\n\t\t'table-sorted': function tableSorted(sortKey) {\n\t\t\tthis.sortKey = sortKey;\n\t\t\tthis.reverse = this.sortKey == sortKey ? this.reverse * -1 : 1;\n\t\t\tthis.fetchDevices();\n\t\t}\n\t},\n\n\tready: function ready() {\n\t\tthis.fetchDevices();\n\t},\n\n\tmethods: {\n\t\tfetchDevices: function fetchDevices() {\n\t\t\tvar data = {\n\t\t\t\t'with': ['property', 'alarm']\n\t\t\t};\n\n\t\t\tthis.$http.get('/api/devices', data).success(function (list) {\n\t\t\t\tthis.devices = list;\n\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\tlist[i].rent_amount = Number(list[i].rent_amount);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\talarmsInProperty: function alarmsInProperty(property) {\n\t\t\treturn _.filter(property.devices, function (device) {\n\t\t\t\tdevice.alarm_id != 0;\n\t\t\t}).length;\n\t\t},\n\n\t\tinactiveDevicesInProperty: function inactiveDevicesInProperty(property) {\n\t\t\treturn _.filter(property.devices, function (device) {\n\t\t\t\tdevice.status != 'active';\n\t\t\t}).length;\n\t\t}\n\t}\n\n});\n\n},{}],10:[function(require,module,exports){\n'use strict';\n\nVue.component('most-expensive-property-table', {\n\tprops: ['userRole'],\n\n\t// components: {\n\t// \t'table-headers': require('./table-headers')\n\t// },\n\n\tdata: function data() {\n\t\treturn {\n\n\t\t\tcolumns: [{\n\t\t\t\tname: 'address',\n\t\t\t\tlabel: 'Address',\n\t\t\t\twidth: 'col-sm-10',\n\t\t\t\tisSortable: false\n\t\t\t}, {\n\t\t\t\tname: 'expenses',\n\t\t\t\tlabel: 'Expenses MTD',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: false\n\t\t\t}],\n\n\t\t\tproperties: []\n\t\t};\n\t},\n\n\tready: function ready() {\n\t\tthis.fetchProperties();\n\t},\n\n\tmethods: {\n\n\t\tfetchProperties: function fetchProperties() {\n\t\t\tvar data = {\n\t\t\t\t'with': ['transactions']\n\t\t\t};\n\n\t\t\tthis.$http.get('/api/properties').success(function (properties) {\n\t\t\t\tthis.properties = _.map(properties, (function (property) {\n\t\t\t\t\treturn this.setTotalExpenses(property);\n\t\t\t\t}).bind(this));\n\t\t\t});\n\t\t},\n\n\t\tsetTotalExpenses: function setTotalExpenses(property) {\n\t\t\tvar transactions = _.filter(property.transactions, function (transaction) {\n\t\t\t\treturn moment(transaction.date) >= moment().subtract(1, 'month');\n\t\t\t});\n\t\t\tvar totalExpenses = _.reduce(transactions, function (memo, transaction) {\n\t\t\t\treturn Number(memo) + Number(transaction.amount) * -1;\n\t\t\t}, 0);\n\t\t\tproperty = _.extend(property, { totalExpenses: totalExpenses });\n\t\t\treturn property;\n\t\t}\n\t}\n\n});\n\n},{}],11:[function(require,module,exports){\n'use strict';\n\nVue.component('portfolio-table', {\n\n\t// components: {\n\t// \t'table-headers': require('./table-headers'),\n\t// },\n\n\tdata: function data() {\n\t\treturn {\n\t\t\tsortKey: 'roi',\n\n\t\t\treverse: -1,\n\n\t\t\tcurrentPage: 1,\n\n\t\t\tsearch: null,\n\n\t\t\tcolumns: [{\n\t\t\t\tname: 'address',\n\t\t\t\tlabel: 'Address',\n\t\t\t\twidth: 'col-sm-5',\n\t\t\t\tisSortable: false\n\t\t\t}, {\n\t\t\t\tname: 'roi',\n\t\t\t\tlabel: 'ROI',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: 'devices',\n\t\t\t\tlabel: 'Devices',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: 'value',\n\t\t\t\tlabel: 'Value',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: '',\n\t\t\t\tlabel: '',\n\t\t\t\twidth: 'col-sm-1',\n\t\t\t\tisSortable: false\n\t\t\t}],\n\n\t\t\tproperties: []\n\t\t};\n\t},\n\n\tevents: {\n\t\t'table-sorted': function tableSorted(sortKey) {\n\t\t\tthis.sortKey = sortKey;\n\t\t\tthis.reverse = this.sortKey == sortKey ? this.reverse * -1 : 1;\n\t\t\tthis.currentPage = 1;\n\t\t\tthis.fetchProperties();\n\t\t}\n\t},\n\n\tready: function ready() {\n\t\tthis.fetchProperties();\n\t},\n\n\tmethods: {\n\n\t\trefreshTable: function refreshTable(sortKey, reverse) {\n\t\t\tthis.fetchProperties(1, sortKey, reverse);\n\t\t},\n\n\t\tfetchProperties: function fetchProperties(page, sortKey, reverse) {\n\t\t\tvar data = {\n\t\t\t\t'with': ['devices', 'transactions']\n\t\t\t};\n\n\t\t\tthis.$http.get('/api/properties', data).success(function (properties) {\n\t\t\t\tthis.properties = properties;\n\t\t\t});\n\t\t},\n\n\t\tshowDetails: function showDetails(id) {\n\t\t\tvar property = _.where(this.properties, { id: id });\n\t\t\t$('[data-property-id=' + id + ']').toggle();\n\t\t}\n\t}\n});\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nVue.component('property-manager-table', {\n\n\tprops: ['userRole'],\n\n\t// components: {\n\t// \t'table-headers': require('./table-headers'),\n\t// },\n\n\tdata: function data() {\n\t\treturn {\n\t\t\tsortKey: '',\n\n\t\t\treverse: -1,\n\n\t\t\tcurrentPage: 1,\n\n\t\t\tpaginated: {},\n\n\t\t\tsearch: null,\n\n\t\t\trange: {\n\t\t\t\tfrom: moment().subtract(1, 'month').format('YYYY-MM-DD')\n\t\t\t},\n\n\t\t\tcolumns: [{\n\t\t\t\tname: 'address',\n\t\t\t\tlabel: 'Address',\n\t\t\t\twidth: 'col-sm-7',\n\t\t\t\tisSortable: false\n\t\t\t}, {\n\t\t\t\tname: 'alarms',\n\t\t\t\tlabel: 'Alarms',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: false\n\t\t\t}, {\n\t\t\t\tname: 'inactive',\n\t\t\t\tlabel: 'Inactive',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: false\n\t\t\t}],\n\n\t\t\tproperties: [],\n\n\t\t\tmessages: [],\n\n\t\t\tmaintenanceRequests: [],\n\n\t\t\tshowDevices: []\n\t\t};\n\t},\n\n\tready: function ready() {\n\t\tthis.fetchProperties();\n\t},\n\n\tmethods: {\n\n\t\tfetchProperties: function fetchProperties(page, sortKey, reverse) {\n\t\t\tvar data = {\n\t\t\t\t'with': ['devices', 'devices.alarm']\n\t\t\t};\n\n\t\t\tthis.$http.get('/api/properties', data).success(function (properties) {\n\t\t\t\tthis.properties = _.map(properties, (function (property) {\n\t\t\t\t\tproperty = this.inactiveDevicesInProperty(property);\n\t\t\t\t\treturn this.alarmsInProperty(property);\n\t\t\t\t}).bind(this));\n\t\t\t});\n\t\t},\n\n\t\talarmsInProperty: function alarmsInProperty(property) {\n\t\t\tvar alarms = _.filter(property.devices, function (device) {\n\t\t\t\treturn device.alarm_id != 0;\n\t\t\t}).length;\n\t\t\tproperty = _.extend(property, { alarms: alarms });\n\t\t\treturn property;\n\t\t},\n\n\t\tinactiveDevicesInProperty: function inactiveDevicesInProperty(property) {\n\t\t\tvar inactives = _.filter(property.devices, function (device) {\n\t\t\t\treturn device.status != 'active';\n\t\t\t}).length;\n\t\t\tproperty = _.extend(property, { inactives: inactives });\n\t\t\treturn property;\n\t\t},\n\n\t\ttoggleDevices: function toggleDevices(id) {\n\t\t\t$('[data-property-id=' + id + ']').toggle();\n\t\t}\n\t}\n\n});\n\n},{}],13:[function(require,module,exports){\n'use strict';\n\nVue.component('table-headers', {\n\n\tprops: ['columns', 'sortKey', 'reverse'],\n\n\ttemplate: '<div class=\"table-heading row\">\\\n\t\t\t\t<div v-for=\"column in columns\" @click=\"sortBy(column)\" :class=\"[column.width, column.isSortable ? \\'sortable\\' : \\'\\' ]\">{{ toTitleCase(column.label) }}<span :class=\"sortKeyClasses(column)\"></span></div>\\\n\t\t\t</div>',\n\n\tdata: function data() {\n\t\treturn {\n\n\t\t\tcurrentPage: 1\n\t\t};\n\t},\n\n\tmethods: {\n\t\tsortBy: function sortBy(column) {\n\t\t\t//var sortKey = column.name;\n\t\t\t// var reverse = (this.sortKey == sortKey) ? this.reverse * -1 : 1;\n\n\t\t\tif (!column.isSortable) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.$dispatch('table-sorted', column.name);\n\n\t\t\t// var sortKey = sortKey;\t\t\t\n\t\t\t// this.refreshTable(sortKey, reverse);\n\t\t\t// this.reverse = reverse;\n\t\t\t// this.sortKey = sortKey;\n\t\t},\n\n\t\tsortKeyClasses: function sortKeyClasses(column) {\n\t\t\tif (!column.isSortable) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar key = column.name;\n\t\t\tvar classes = ['icon'];\n\n\t\t\tif (key == this.sortKey) {\n\t\t\t\tclasses.push('text-warning');\n\t\t\t\tif (this.reverse > 0) {\n\t\t\t\t\tclasses.push('icon-chevron-up');\n\t\t\t\t\treturn classes;\n\t\t\t\t}\n\t\t\t\tclasses.push('icon-chevron-down');\n\t\t\t\treturn classes;\n\t\t\t}\n\t\t\tclasses.push('icon-chevron-up', 'text-muted');\n\t\t\treturn classes;\n\t\t}\n\t}\n});\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nVue.component('transactions-table', {\n\tprops: ['userRole'],\n\n\t// components: {\n\t// \t'table-headers': require('./table-headers'),\n\t// },\n\n\tdata: function data() {\n\t\treturn {\n\t\t\tsortKey: 'date',\n\n\t\t\treverse: -1,\n\n\t\t\tcurrentPage: 1,\n\n\t\t\tsearch: null,\n\n\t\t\tcolumns: [{\n\t\t\t\tname: 'amount',\n\t\t\t\tlabel: 'Amount',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: 'address',\n\t\t\t\tlabel: 'Applied To',\n\t\t\t\twidth: 'col-sm-2',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: 'description',\n\t\t\t\tlabel: 'Description',\n\t\t\t\twidth: 'col-sm-5',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: '',\n\t\t\t\tlabel: '',\n\t\t\t\twidth: 'col-sm-1',\n\t\t\t\tisSortable: false\n\t\t\t}, {\n\t\t\t\tname: 'date',\n\t\t\t\tlabel: 'date',\n\t\t\t\twidth: 'col-sm-1',\n\t\t\t\tisSortable: true\n\t\t\t}, {\n\t\t\t\tname: '',\n\t\t\t\tlabel: '',\n\t\t\t\twidth: 'col-sm-1',\n\t\t\t\tisSortable: false\n\t\t\t}],\n\n\t\t\tforms: {\n\t\t\t\ttransaction: {}\n\t\t\t},\n\n\t\t\ttransactions: [],\n\n\t\t\tproperties: [],\n\n\t\t\tdates: {\n\t\t\t\tfrom: moment().subtract(1, 'month').format(dateString),\n\t\t\t\tto: moment().format(dateString)\n\t\t\t}\n\t\t};\n\t},\n\n\tready: function ready() {\n\t\tthis.fetchTransactions();\n\t\tthis.fetchProperties();\n\t\tthis.initializeForm();\n\t},\n\n\tevents: {\n\t\t'table-sorted': function tableSorted(sortKey) {\n\t\t\tthis.sortKey = sortKey;\n\t\t\tthis.reverse = this.sortKey == sortKey ? this.reverse * -1 : 1;\n\t\t\t//this.currentPage = 1;\n\t\t\t//this.fetchTransactions();\n\t\t},\n\n\t\t'modal-hidden': function modalHidden() {\n\t\t\tthis.refreshForm();\n\t\t}\n\t},\n\n\tmethods: {\n\t\tfetchTransactions: function fetchTransactions() {\n\t\t\tthis.$http.get('/api/transactions').success(function (transactions) {\n\t\t\t\t_.each(transactions, function (transaction) {\n\t\t\t\t\ttransaction.amount = Number(transaction.amount);\n\t\t\t\t});\n\t\t\t\tthis.transactions = transactions;\n\t\t\t});\n\t\t},\n\n\t\tfetchProperties: function fetchProperties() {\n\t\t\tvar data = this.generateUrlVars({\n\t\t\t\t'with': ['devices']\n\t\t\t});\n\n\t\t\tthis.$http.get('/api/properties', data).success(function (properties) {\n\t\t\t\tthis.properties = properties;\n\t\t\t\t//console.log(result);\n\t\t\t});\n\t\t},\n\n\t\tsubmitTransaction: function submitTransaction() {\n\t\t\tif (!this.forms.transaction.payable_id) {\n\t\t\t\tswal('Error', 'No property or device selected!');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (this.forms.transaction.transaction) {\n\t\t\t\tthis.updateTransaction();\n\t\t\t} else {\n\t\t\t\tthis.createTransaction();\n\t\t\t}\n\t\t},\n\n\t\tcreateTransaction: function createTransaction() {\n\t\t\tvar that = this;\n\t\t\tTS.post('/api/transactions', this.forms.transaction).then(function (transaction) {\n\t\t\t\tthat.fetchTransactions();\n\t\t\t\tthat.$broadcast('hide-modal');\n\t\t\t\tthat.refreshForm();\n\t\t\t});\n\t\t},\n\n\t\tupdateTransaction: function updateTransaction() {\n\t\t\tvar that = this;\n\n\t\t\tTS.patch('/api/transactions/' + this.forms.transaction.transaction.id, this.forms.transaction).then(function (transaction) {\n\t\t\t\tthat.$broadcast('hide-modal');\n\t\t\t\tthat.refreshForm();\n\t\t\t\tthat.fetchTransactions();\n\t\t\t});\n\t\t},\n\n\t\tdeleteTransaction: function deleteTransaction(id) {\n\t\t\tvar that = this;\n\n\t\t\tTS['delete']('/api/transactions/' + id, this.forms.transaction).then(function () {\n\t\t\t\tthat.fetchTransactions();\n\t\t\t});\n\t\t},\n\n\t\tgetTransactionPayable: function getTransactionPayable(transaction) {\n\n\t\t\tswitch (transaction.payable_type) {\n\t\t\t\tcase 'TenantSync\\\\Models\\\\Property':\n\t\t\t\t\treturn 'property';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TenantSync\\\\Models\\\\Device':\n\t\t\t\t\treturn 'device';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'TenantSync\\\\Models\\\\User':\n\t\t\t\t\treturn 'user';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tgenerateModal: function generateModal(transactionId) {\n\t\t\tif (typeof transactionId !== 'undefined') {\n\t\t\t\tthis.populateForm(transactionId);\n\t\t\t}\n\t\t\tthis.showModal();\n\t\t},\n\n\t\tshowModal: function showModal() {\n\t\t\tthis.$broadcast('show-modal');\n\t\t},\n\n\t\tpopulateForm: function populateForm(transactionId) {\n\t\t\tthis.forms.transaction.amount = this.transactions[transactionId].amount;\n\t\t\tthis.forms.transaction.transaction = this.transactions[transactionId];\n\t\t\tthis.forms.transaction.description = this.transactions[transactionId].description ? this.transactions[transactionId].description : '';\n\t\t\tthis.forms.transaction.date = this.transactions[transactionId].date;\n\t\t\tthis.forms.transaction.payable_id = this.transactions[transactionId].payable_id, this.forms.transaction.payable_type = this.getTransactionPayable(this.transactions[transactionId]), this.forms.transaction.payable_selected = this.transactions[transactionId].address, this.forms.transaction.schedule = this.transactions[transactionId].recurring ? this.transactions[transactionId].recurring.schedule : null;\n\t\t\tthis.forms.transaction.recurring = this.transactions[transactionId].recurring ? true : false;\n\t\t\treturn this.forms.transaction;\n\t\t},\n\n\t\tinitializeForm: function initializeForm() {\n\t\t\tthis.forms.transaction = new TSForm({\n\t\t\t\tuser_id: TenantSync.landlord,\n\t\t\t\tamount: '',\n\t\t\t\tdescription: '',\n\t\t\t\ttransaction: null,\n\t\t\t\tdate: '',\n\t\t\t\tpayable_id: null,\n\t\t\t\tpayable_type: null,\n\t\t\t\tpayable_search: null,\n\t\t\t\tpayable_selected: null,\n\t\t\t\trecurring: false,\n\t\t\t\tschedule: null\n\t\t\t});\n\t\t},\n\n\t\trefreshForm: function refreshForm() {\n\t\t\tthis.initializeForm();\n\t\t},\n\n\t\tsetPayable: function setPayable(type, id, string) {\n\t\t\tthis.forms.transaction.is_rent == false;\n\t\t\tthis.forms.transaction.payable_type = type;\n\t\t\tif (type == 'user') {\n\t\t\t\tthis.forms.transaction.payable_selected = 'General';\n\t\t\t\tthis.forms.transaction.payable_id = TenantSync.landlord;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tthis.forms.transaction.payable_selected = string;\n\t\t\tthis.forms.transaction.payable_id = id;\n\t\t\treturn true;\n\t\t}\n\t}\n\n});\n\n},{}],15:[function(require,module,exports){\n'use strict';\n\nVue.http.headers.common['X-CSRF-TOKEN'] = document.getElementById('_token').getAttribute('value');\n\nVue.config.debug = true;\n\nvar math = {\n\t'+': function _(a, b) {\n\t\treturn a + b;\n\t},\n\t'-': function _(a, b) {\n\t\treturn a - b;\n\t},\n\t'>': function _(a, b) {\n\t\treturn a > b;\n\t},\n\t'<': function _(a, b) {\n\t\treturn a < b;\n\t}\n};\n\nVue.prototype.numeral = window.numeral;\nVue.prototype.moment = window.moment;\nVue.prototype._ = window._;\n\nVue.mixin({\n\tmethods: {\n\t\tgenerateUrlVars: function generateUrlVars(includes) {\n\t\t\tvar include = $.param(includes);\n\t\t\treturn include;\n\t\t},\n\n\t\ttoTitleCase: function toTitleCase(string) {\n\t\t\tvar strings = string.replace('_', ' ').split(' ');\n\t\t\tfor (var i = 0; i < strings.length; i++) {\n\t\t\t\tstrings[i] = strings[i].charAt(0).toUpperCase() + strings[i].slice(1);\n\t\t\t}\n\t\t\treturn strings.join(' ');\n\t\t},\n\n\t\tconfirm: function confirm(action, object, id) {\n\t\t\tswal({\n\t\t\t\ttitle: 'Just Checking',\n\t\t\t\ttext: 'Are you sure you want to ' + action + ' this ' + object.toLowerCase() + '?',\n\t\t\t\ttype: 'warning',\n\t\t\t\tshowCancelButton: true,\n\t\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\t\tcancelButtonColor: '#d33',\n\t\t\t\tconfirmButtonText: 'Yes',\n\t\t\t\tcloseOnConfirm: true }, (function (confirmed) {\n\t\t\t\treturn confirmed ? this[action + object](id) : false;\n\t\t\t}).bind(this));\n\t\t}\n\t}\n});\n\nVue.filter('search', function (list, string) {\n\tif (!string) {\n\t\treturn list;\n\t}\n\n\treturn _.filter(list, (function (object) {\n\t\treturn _.find(object, (function (property) {\n\t\t\tif (typeof property === 'string') {\n\t\t\t\treturn property.toLowerCase().includes(string.trim().toLowerCase());\n\t\t\t}\n\t\t\treturn false;\n\t\t}).bind(string));\n\t}).bind(string));\n});\n\nVue.filter('whereNotIn', function (list, sourceList, property) {\n\tif (!sourceList || !property) {\n\t\treturn list;\n\t}\n\n\treturn _.filter(list, function (object) {\n\t\treturn !_.size(_.where(sourceList, { 'id': object[property] }));\n\t});\n});\n\n/* TenantSync Initializing */\nwindow.TS = {};\n\n},{}]},{},[1]);\n"],"file":"app.js","sourceRoot":"/source/"}